---
description: 
globs: 
alwaysApply: true
---
# Inbox Zero AI - Master Rule Index

This document serves as the central index for all active Cursor rules within this repository, organized by category. These rules define processes, structures, and guidelines for development.

## Core & General

Fundamental project structure, setup, and general development guidelines.

| Rule File                          | Description                                                 |
| :--------------------------------- | :---------------------------------------------------------- |
| @cursor-rules.mdc                  | How to add or edit Cursor rules in our project              |
| @project-structure.mdc             | Project structure and file organization guidelines          |
| @clean-code.mdc                    | Guidelines for writing clean, maintainable, and human-readable code |
| @codequality.mdc                   | Code Quality Guidelines                                     |
| @utilities.mdc                     | Util functions                                              |
| @gitflow.mdc                       | Gitflow Workflow Rules for git operations                  |

## Frontend & UI

Guidelines for building user interfaces and handling frontend logic.

| Rule File                          | Description                                                 |
| :--------------------------------- | :---------------------------------------------------------- |
| @react.mdc                         | React best practices and patterns for modern web applications |
| @nextjs.mdc                        | Next.js with TypeScript and Tailwind UI best practices      |
| @ui-components.mdc                 | UI component and styling guidelines using Shadcn UI, Radix UI, and Tailwind |
| @tailwind.mdc                      | Tailwind CSS and UI component best practices for modern web applications |
| @data-fetching.mdc                 | Fetching data from the API using TanStack Query             |

## Backend & API

Guidelines for implementing backend logic, APIs, and data persistence.

| Rule File                          | Description                                                 |
| :--------------------------------- | :---------------------------------------------------------- |
| @fastapi.mdc                       | FastAPI best practices and patterns for building modern Python web APIs |
| @node-express.mdc                  | Node.js and Express.js best practices for backend development |
| @python.mdc                        | Python best practices and patterns for modern software development |
| @database.mdc                      | Database best practices focusing on Prisma and Supabase integration |

## Security

Security guidelines for application development.

| Rule File                          | Description                                                 |
| :--------------------------------- | :---------------------------------------------------------- |
| @security.mdc                      | Security guidelines for API route development               |
| @security-audit.mdc                | Security audit report commands                              |

## Testing

General guidelines for application testing.

| Rule File                          | Description                                                 |
| :--------------------------------- | :---------------------------------------------------------- |
| @testing.mdc                       | Guidelines for testing the application with Vitest          |
| @unit-testing.mdc                  | Guidelines for writing unit tests with Jest and TypeScript  |
| @e2e-testing.mdc                   | End-to-End Testing Guidelines with Playwright              |