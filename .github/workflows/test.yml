name: 🧪 Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: read
  deployments: read

jobs:
  color-system-integrity:
    name: 🎨 Color System Integrity Check
    runs-on: ubuntu-latest
    # Run this first to fail fast if hardcoded colors are detected
    
    steps:
      - name: 📋 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📥 Install dependencies
        run: npm ci
      
      - name: 🎨 Run color system integrity test
        run: npm run test:color-integrity
        env:
          CI: true

  unit-tests:
    name: 🔬 Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: color-system-integrity
    
    steps:
      - name: 📋 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📥 Install dependencies
        run: npm ci
      
      - name: 🔍 Run linting
        run: npm run lint
      
      - name: 🧪 Run unit tests
        run: npm run test:coverage
      
      - name: 📊 Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  e2e-tests:
    name: 🌐 End-to-End Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
      - name: 📋 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📥 Install dependencies
        run: npm ci
      
      - name: 🎭 Get installed Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(npm list @playwright/test --json | jq -r '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT
      
      - name: 🎭 Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}
      
      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      
      - name: 🎭 Install Playwright system dependencies only
        run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit == 'true'
      
      - name: 🏗️ Build application
        run: npm run build
      
      - name: 🌐 Run E2E tests
        run: npm run test:e2e
        env:
          CI: true
      
      - name: 📤 Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30 